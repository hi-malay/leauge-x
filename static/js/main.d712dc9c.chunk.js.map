{"version":3,"sources":["components/common/Drawer/ContextMain.tsx","components/Router/PrivateRoute/index.tsx","components/Login/Login.tsx","components/common/Drawer/constant.tsx","components/HomePage/ic_close_blue.svg","components/HomePage/HomePage.tsx","components/GamePage/GamePage.tsx","components/Router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ContextMain","React","createContext","PrivateRoute","props","useState","userData","transData","useEffect","location","pathname","render","className","Provider","value","component","useStyles","makeStyles","root","maxWidth","marginTop","bullet","display","margin","transform","title","fontSize","pos","marginBottom","OutlinedCard","classes","Card","variant","CardContent","Typography","to","Button","color","CardActions","size","process","PAGE_TWO_ERROR_TEXT","console","log","REACT_URL","HomePage","handleCloseSub","setState","date_match_modal","name","nameError","nameErrorLabel","saveDetailsEnable","openModal","handleInputChange","event","type","target","room","room2","roomError","roomErrorLabel","room2Error","room2ErrorLabel","validationDynamic","state","room_arr","push","index","indexOf","splice","enterGame","redirect","this","onClick","length","map","data","Chip","label","deleteIcon","src","alt","data-id","onDelete","FormControl","InputLabel","id","Select","labelId","onChange","MenuItem","undefined","row","i","CircularProgress","Dialog","open","onClose","aria-labelledby","aria-describedby","noValidate","autoComplete","TextField","error","helperText","fullWidth","DialogActions","Component","GamePage","componentDidMount","roomData","timer","setInterval","progress","newQuestion","clearInterval","randomVal","Math","floor","random","questions_arr","filter","match","correct","incrementErrorLabel","incrementError","increment","question","option","LinearProgress","CustomRoute","basename","path","Login","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d712dc9c.chunk.js","sourcesContent":["\n\nimport React from 'react';\n\n\nexport const ContextMain = React.createContext({});\n","import { Card, CardContent } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport {\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport \"../../style.css\"\nimport { ContextMain } from \"./../../common/Drawer/ContextMain\"\n\n\nexport default function PrivateRoute(props: any) {\n    const [userData, setUserData] = React.useState({});\n    const [transData, setTransData] = React.useState({});\n    const mainApi = () => {\n    }\n\n    useEffect(() => {\n        mainApi()\n    }, [props.location.pathname])\n\n    return (\n        <Route render={() =>\n            <div className=\"bg-grey full-len \" >\n                <ContextMain.Provider value={userData}>\n                    <div className=\"max-width max-width-padd \">\n                        {/* <div className=\"col-md-4 mt-5\">\n                            <PersistentDrawerRight />\n                        </div> */}\n                        <div className=\" margin-top-head\">\n                            <props.component value={transData} />\n                        </div>\n                    </div>\n                </ContextMain.Provider>\n            </ div>} />\n    )\n\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 675,\n        marginTop: 30\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nexport default function OutlinedCard() {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\" className=\"main-title mb-3\">\n                    Leauge-X Assignment\n        </Typography>\n\n\n                <Typography variant=\"body2\" component=\"p\">\n                    Click Here to Login\n          <br />\n                </Typography>\n                <Link to={`/home`} className=\"login-button\">  <Button variant=\"contained\" className=\"btn-class mt-4\" color=\"primary\" >Login</Button></Link>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\">By: Malay Mishra</Button>\n                <Button size=\"small\">Environment: {process.env.REACT_APP_ENV}</Button>\n            </CardActions>\n        </Card>\n    );\n}\n","\nconst HEAD_URL = \"http://localhost:5000\"\nexport const PAGE_TWO_ERROR_TEXT = {\n    'firstNameLabel': \"Invalid First Name.\",\n    'amountLabel': \"Invalid Company Name.\",\n    'mobileNumberLabel': \"Invalid Mobile Number.\",\n    \"selectErrorLabel\": \"No name selected\",\n    \"emailLabel\": \"Invalid email\",\n    \"passwordLabel\": \"Invalid password\",\n    \"roomErrorLabel\": \"one room should have minimum 2 users\"\n\n}\nconsole.log(\"data\", process.env.REACT_URL)\nexport const API = {\n    \"main_url\": HEAD_URL + \"/api/user/fullList\",\n    \"add_funds\": HEAD_URL + \"/api/user/addFunds\",\n    \"spend_funds\": HEAD_URL + \"/api/user/spendFunds\",\n    \"get_funds_id\": HEAD_URL + \"/api/user\",\n    \"add_user\": HEAD_URL + \"/api/user/add\",\n    \"trans_url\": \"https://my-json-server.typicode.com/hi-malay/trans/db\",\n    \"signup_url\": HEAD_URL + \"/api/auth/signup\",\n    \"login_url\": HEAD_URL + \"/api/auth/login\",\n    \"auth_user\": HEAD_URL + \"/api/auth\"\n}","export default __webpack_public_path__ + \"static/media/ic_close_blue.8ccfc5f5.svg\";","import { Card } from '@material-ui/core';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { PAGE_TWO_ERROR_TEXT } from './../common/Drawer/constant';\nimport { Redirect } from \"react-router-dom\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ContextMain } from \"./../common/Drawer/ContextMain\"\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport deleteIcon from \"../HomePage/ic_close_blue.svg\"\nimport GamePage from \"../GamePage/GamePage\"\nclass HomePage extends React.Component<any,\n    {\n        name: string,\n        nameError: boolean,\n        nameErrorLabel: string,\n        saveDetailsEnable: any,\n        date_match_modal: boolean,\n        room_arr: any,\n        roomErrorLabel: string,\n        roomError: boolean,\n        room: string,\n        room2ErrorLabel: string,\n        room2Error: boolean,\n        room2: string,\n        redirect: boolean\n\n\n\n    }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state =\n        {\n\n            name: '',\n            nameError: false,\n            nameErrorLabel: '',\n            saveDetailsEnable: true,\n            date_match_modal: false,\n            roomErrorLabel: '',\n            roomError: false,\n            room: '',\n            room2ErrorLabel: '',\n            room2Error: false,\n            room2: '',\n            redirect: false,\n            room_arr: []\n\n        }\n\n    }\n\n    handleCloseSub = () => {\n        this.setState({ date_match_modal: false, name: \"\", nameError: false, nameErrorLabel: \"\", saveDetailsEnable: true })\n    };\n    openModal = () => {\n        this.setState({ date_match_modal: true })\n    }\n    handleInputChange = (event: any, type: any) => {\n        console.log(\"av\", event.target.value)\n        if (type === \"name\") {\n            this.setState({ name: event.target.value });\n        }\n        else if (type === \"room\") {\n            this.setState({ room: event.target.value });\n        }\n        else if (type === \"room2\") {\n            this.setState({ room2: event.target.value });\n        }\n\n\n        this.setState({\n            nameError: false,\n            nameErrorLabel: '',\n            roomError: false,\n            roomErrorLabel: '',\n            room2Error: false,\n            room2ErrorLabel: '',\n            saveDetailsEnable: true\n        })\n    };\n\n    validationDynamic = (event: any, type: any) => {\n        if (this.state.name === \"\") {\n            this.setState({ nameError: true, nameErrorLabel: PAGE_TWO_ERROR_TEXT.firstNameLabel, saveDetailsEnable: false })\n            return;\n        }\n\n        const room_arr = [...this.state.room_arr];\n        if (type === \"add\") {\n            if (this.state.name !== \"\") {\n                room_arr.push(this.state.name);\n                this.setState({ room_arr, name: \"\", date_match_modal: false })\n            }\n        }\n        else if (type === \"delete\") {\n\n            const index = room_arr.indexOf(event)\n            room_arr.splice(index, 1);\n            this.setState({ room_arr });\n        }\n    }\n\n    enterGame = () => {\n        if (this.state.room !== this.state.room2 || this.state.room == \"\" || this.state.room2 == \"\") {\n            this.setState({ roomError: true, roomErrorLabel: PAGE_TWO_ERROR_TEXT.roomErrorLabel, saveDetailsEnable: false })\n            return;\n        }\n        this.setState({ redirect: true })\n\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return (\n                // \n                <>\n\n                    <Redirect to={{\n                        pathname: `/game`\n                    }} />\n\n                </>\n            )\n        }\n        return (\n            <div>\n                <Card className=\"home-card\">\n                    <Button variant=\"contained\" className=\"btn-class mt-4\" color=\"primary\" onClick={() => this.openModal()}>Create Room</Button>\n                    <hr></hr>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <div className=\"modal-title mb-4\">Room Lists</div>\n                            {this.state.room_arr.length >= 1 ? (this.state.room_arr.map((data: any, index: any) => {\n                                return (\n                                    <div className=\"tag\" key={index} >\n                                        <Chip\n                                            variant=\"outlined\"\n                                            label={data}\n                                            deleteIcon={\n                                                <img src={deleteIcon} className=\"chip-icon\" alt=\"icom\" />\n                                            }\n                                            className=\"mb-2 chips-style\"\n                                            data-id=\"delete\"\n                                            //onClick={(data) => this.handleAddPerson(data)}\n                                            onDelete={(data) => this.validationDynamic(data, \"delete\")}\n                                        />\n                                    </div>\n                                );\n                            })) : <div className=\"modal-subtitle\">No rooms found</div>}\n\n\n                        </div>\n                        <div className=\"col-md-6\">\n\n                            <div className=\"modal-title mb-4\">Select Room for User</div>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <FormControl >\n                                        <InputLabel id=\"demo-simple-select-helper-label\">User1</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-helper-label\"\n                                            id=\"demo-simple-select-helper\"\n                                            value={this.state.room}\n                                            onChange={(event) => this.handleInputChange(event, \"room\")}\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {this.state.room_arr.length !== undefined\n                                                ? this.state.room_arr.map((row: any, i: any) => (\n                                                    <MenuItem value={row}>{row}</MenuItem>\n                                                ))\n                                                : (<CircularProgress color=\"inherit\" size={30} className=\"table-loader\" />)\n                                            }\n\n                                        </Select>\n\n                                    </FormControl>\n                                </div>\n                                <div className=\"col-md-12 mt-3\">\n                                    <FormControl >\n                                        <InputLabel id=\"demo-simple-select-helper-label\">User2</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-helper-label\"\n                                            id=\"demo-simple-select-helper\"\n                                            value={this.state.room2}\n                                            onChange={(event) => this.handleInputChange(event, \"room2\")}\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {this.state.room_arr.length !== undefined\n                                                ? this.state.room_arr.map((row: any, i: any) => (\n                                                    <MenuItem value={row}>{row}</MenuItem>\n                                                ))\n                                                : (<CircularProgress color=\"inherit\" size={30} className=\"table-loader\" />)\n                                            }\n\n                                        </Select>\n\n                                    </FormControl>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.roomError ?\n                        (<div className=\"error_box\">{this.state.roomErrorLabel}</div >\n                        ) : \"\"\n                    }\n                    <Button variant=\"contained\" className=\"btn-class mt-4 text-right\" color=\"primary\" onClick={() => this.enterGame()}>Enter Game</Button>\n                    <Dialog\n                        open={this.state.date_match_modal}\n                        onClose={this.handleCloseSub}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\">\n                        <h3 className=\"modal-title\">Add Room</h3>\n                        <div className=\"max-width-in\">\n                            <form noValidate autoComplete=\"off\">\n                                <div className=\"row mt-3\" >\n                                    <div className=\"col-md-8 mt-3\">\n                                        <TextField id=\"standard-basic\" label=\"Room Name\"\n                                            value={this.state.name}\n                                            error={this.state.nameError}\n                                            helperText={this.state.nameErrorLabel}\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"custom-input\"\n                                            fullWidth\n                                            //  disabled={isAccountDetailsDisabled}\n                                            name=\"text\"\n                                            data-id=\"text\"\n                                            onChange={(event) =>\n                                                this.handleInputChange(event, \"name\")\n                                            }\n                                        />\n                                    </div>\n                                    <div className=\"col-md-6 mt-3\">\n                                        <Button variant=\"contained\" color=\"primary\" className={(this.state.saveDetailsEnable === true) ? (\"btn-class mt-4\") : (\"btn-class-default mt-4\")} onClick={(data) => this.validationDynamic(data, \"add\")}>Submit</Button>\n                                    </div>\n\n                                </div>\n\n                            </form>\n                        </div>\n\n                        <DialogActions>\n                            <Button onClick={this.handleCloseSub} color=\"primary\">\n                                Close\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </Card>\n\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import { Card } from '@material-ui/core';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { PAGE_TWO_ERROR_TEXT } from './../common/Drawer/constant';\nimport { Redirect } from \"react-router-dom\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ContextMain } from \"./../common/Drawer/ContextMain\"\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport deleteIcon from \"../HomePage/ic_close_blue.svg\"\nimport _ from \"lodash\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nclass GamePage extends React.Component<any,\n    {\n        name: string,\n        nameError: boolean,\n        nameErrorLabel: string,\n        progress: any,\n        date_match_modal: boolean,\n        roomErrorLabel: string,\n        roomError: boolean,\n        room: string,\n        incrementErrorLabel: string,\n        incrementError: boolean,\n        increment: any,\n        redirect: boolean,\n        questions_arr: any,\n        newQuestion: any\n\n\n    }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state =\n        {\n\n            name: '',\n            nameError: false,\n            nameErrorLabel: '',\n            progress: 0,\n            date_match_modal: false,\n            roomErrorLabel: '',\n            roomError: false,\n            room: '',\n            incrementErrorLabel: '',\n            incrementError: false,\n            increment: 1,\n            redirect: false,\n            newQuestion: {},\n            questions_arr: [\n                {\n                    question: \"If a leaf falls to the ground in a forest and no one hears it, does it make a sound? \",\n                    option: [\"Yes\", \"Option A\", \"Both\", \"All of the Above\"],\n                    correct: \"All of the Above\",\n                    id: 1\n                },\n                {\n                    question: \"Divide 30 by half and add ten.\",\n                    option: [\"40.5\", \"50\", \"10\", \"I know this is a trick question, so NONE. Ha!\"],\n                    correct: \"I know this is a trick question, so NONE. Ha!\",\n                    id: 2\n                },\n                {\n                    question: \"which option is correct\",\n                    option: [\"This\", \"Option A\", \"Both\", \"All of the Above\"],\n                    correct: \"All of the Above\",\n                    id: 3\n                },\n                {\n                    question: \"Probablity you were right answering previous question\",\n                    option: [\"10\", \"20\", \"50\", \"0\"],\n                    correct: \"0\",\n                    id: 4\n                },\n            ]\n        }\n    }\n\n    componentDidMount = () => {\n        console.log(\"props\", this.props.roomData)\n        const timer = setInterval(() => {\n            if (this.state.progress >= 100) {\n                this.setState({ progress: 0 })\n                this.newQuestion()\n            }\n            else {\n                this.setState({ progress: this.state.progress + 10 })\n            }\n        }, 1000);\n        return () => {\n            clearInterval(timer);\n        };\n    }\n\n    newQuestion = () => {\n        // the commented line is for random question\n\n        let randomVal = Math.floor(Math.random() * (this.state.questions_arr.length) + 1)\n        let newQuestion = this.state.questions_arr.filter((data: any) => data.id === randomVal)\n        console.log(\"ddd\", randomVal)\n        // this line is for series question\n        // let newQuestion = this.state.questions_arr.filter((data: any) => data.id === this.state.increment)\n        this.setState({ newQuestion: newQuestion, progress: 0 })\n\n        // if (this.state.increment >= this.state.questions_arr.length) {\n        //     this.setState({ increment: 1 })\n        // }\n        // else {\n        //     this.setState({ increment: this.state.increment + 1 })\n        // }\n    }\n    handleCloseSub = () => {\n        this.setState({ date_match_modal: false })\n    };\n    match = (data: any) => {\n\n        if (this.state.newQuestion[0].correct === data) {\n            this.setState({ redirect: true })\n        }\n        else {\n            this.setState({ redirect: false })\n        }\n        this.setState({ date_match_modal: true })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card className=\"home-card\">\n                    <div className=\"modal-title mb-4 mt-3\">Question</div>\n                    {this.state.newQuestion.length > 0 ?\n                        <div className=\"row text-left pl-5 pr-4\">\n                            <div className=\"col-md-12 mt-3\">\n                                <div className=\"question\">{this.state.newQuestion[0].question}</div>\n                            </div>\n                            {this.state.newQuestion[0].option.map((data: any, i: any) => {\n                                return (\n                                    <div className=\"col-md-6 mt-4 \">\n                                        <div className=\"child-div option\" onClick={() => this.match(data)}>{data}</div>\n                                    </div>\n                                )\n                            })}\n                        </div> : <div className=\"error_que\">Please press <b>Next Question</b> to proceed</div>\n                    }\n\n                    <Button variant=\"contained\" className=\"btn-class mt-4 \" color=\"primary\" onClick={() => this.newQuestion()}>Next Question</Button>\n                </Card>\n                <Dialog\n                    open={this.state.date_match_modal}\n                    onClose={this.handleCloseSub}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\">\n                    {this.state.redirect ?\n                        <h3 className=\"modal-title-green\">Correct Answer</h3> : <h3 className=\"modal-title-red\">Oops! Wrong Answer</h3>\n                    }\n\n                    <DialogActions>\n                        <Button onClick={this.handleCloseSub} color=\"primary\">\n                            Close\n                            </Button>\n                    </DialogActions>\n                </Dialog>\n                <div className=\"mt-5\">\n                    <LinearProgress variant=\"determinate\" value={this.state.progress} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GamePage;","import React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\nimport PrivateRoute from './PrivateRoute';\nimport Login from \"../Login/Login\";\nimport HomePage from \"../HomePage/HomePage\"\nimport GamePage from \"../GamePage/GamePage\"\nclass CustomRoute extends Component {\n    render() {\n        return (\n            <div>\n                <Router basename=\"/league-x\">\n                    <Switch>\n                        <PrivateRoute path=\"/home\" component={HomePage} />\n                        <PrivateRoute path=\"/game\" component={GamePage} />\n                        <Route path=\"/\" component={Login} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default CustomRoute;\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CustomRoutes from './components/Router';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CustomRoutes />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}